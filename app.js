const TelegramBot = require('node-telegram-bot-api');
const request= require ('request');

const token = '736680208:AAFBgN3plB2Kilgk6OYgrtbYJFfB3FLUZ2U';


const bot = new TelegramBot(token, {polling: true});

const flag = {
    'EUR': 'üá™üá∫',
    'USD': 'üá∫üá∏',
    'RUR': 'üá∑üá∫',
    'UAH': 'üá∫üá¶'
};



bot.onText(/\/currencies/, (msg, match) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–ö–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text:"‚Ç¨ EUR",
                        callback_data: 'EUR',
                    },

                    {
                        text:"$ USD",
                        callback_data: 'USD',
                    },

                    {
                        text:"‚ÇΩ RUB",
                        callback_data: 'RUR',
                    },

                ]

            ]
        }
    });
});

bot.on('callback_query', query=> {
    const id = query.message.chat.id;
    if (query.message.text == "–ö–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?") {
        request('https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5', function (error, response, body) {
            const data = JSON.parse(body);
            const result = data.filter(item => item.ccy === query.data)[0];

            let md = `* ${flag[result.ccy]} ${result.ccy} ‚û° ${result.base_ccy}  ${flag[result.base_ccy]}* \nBuy: _${Math.trunc(result.buy * 100) / 100}_ \nSale: _${Math.trunc(result.sale * 100) / 100}_`;
            bot.sendMessage(id, md, {parse_mode: 'Markdown'});

        })
    }

    else if (query.message.text == '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏') {

            request('https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5', function (error, response, body) {

                const cur= query.data.slice(0 ,3 );
                var summ = +query.data.slice(3);
                const data = JSON.parse(body);
                const result = data.filter(item => item.ccy === cur)[0];
                let res = (summ / result.sale);
                let md = ` ${flag['UAH']} ${result.base_ccy} ‚û° ${result.ccy}  ${flag[result.ccy]} \n*${summ}*  ${result.base_ccy} = *${Math.trunc(res * 100) / 100}* ${result.ccy}`;
                bot.sendMessage(id, md, {parse_mode: 'Markdown'});

            })
    }
});


bot.onText(/\/converter/, (msg, match) => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId,  '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –≥—Ä–∏–≤–Ω–∞—Ö –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å');



});

bot.onText(/\/start/, (msg, match) => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId, '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –í–≤–µ–¥–∏—Ç–µ:\n\/currencies - —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç\n\/converter - —á—Ç–æ –±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã');

});


bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    var summ = msg.text;


    if (summ.match(/,/i)!= -1){summ = summ.replace(",",".");
    console.log(summ)};
    if ((summ!='/converter') && (summ!='/start') && (summ!='/currencies')){

    summ = Number(summ);
     if (isNaN(summ)){
        bot.sendMessage(chatId,`–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç üò® \n*–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏:*\n\/currencies - —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç\n\/converter - —á—Ç–æ –±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã`, {parse_mode: 'Markdown'});
    }

    else {
        bot.sendMessage(chatId,`–í—ã –≤–≤–µ–ª–∏ *${summ}* –≥—Ä–Ω`, {parse_mode: 'Markdown'});
        bot.sendMessage(chatId,  '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏',
            {
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: "‚Ç¨ EUR",
                                callback_data: 'EUR'+summ,

                            },

                            {
                                text: "$ USD",
                                callback_data: 'USD'+summ,

                            },

                            {
                                text: "‚ÇΩ RUB",
                                callback_data: 'RUR'+summ,

                            },

                        ]

                    ]
                }
            });

    }
}});
